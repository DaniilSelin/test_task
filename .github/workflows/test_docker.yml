name: Docker Compose Test

on:
  push:
    branches:
      - master

jobs:
  test-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
    
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Check Docker version
        run: docker --version

      - name: Build and run Docker Compose
        run: |
          docker compose down --volumes --remove-orphans
          docker compose up -d --build

      - name: Verify running containers
        run: docker ps

      - name: Wait for services to start
        run: sleep 10

      - name: Test app
        run: |
          pip install --no-cache-dir -r requirements.txt
      
          # Очищаем базу данных
          curl -X POST http://127.0.0.1:5000/clear_db
          
          # Создаем шаблоны
          curl -X POST http://127.0.0.1:5000/create_template \
            -H "Content-Type: application/json" \
            -d '{
                "name": "User Registration",
                "fields": [
                    {"name": "email", "type": "email"},
                    {"name": "phone", "type": "phone"},
                    {"name": "dob", "type": "date"}
                ]
            }'
      
          curl -X POST http://127.0.0.1:5000/create_template \
            -H "Content-Type: application/json" \
            -d '{
                "name": "Contact Form",
                "fields": [
                    {"name": "name", "type": "text"},
                    {"name": "email", "type": "email"},
                    {"name": "message", "type": "text"}
                ]
            }'
      
          curl -X POST http://127.0.0.1:5000/create_template \
            -H "Content-Type: application/json" \
            -d '{
                "name": "Event Creation",
                "fields": [
                    {"name": "title", "type": "text"},
                    {"name": "description", "type": "text"},
                    {"name": "date", "type": "date"}
                ]
            }'
      
          curl -X POST http://127.0.0.1:5000/create_template \
            -H "Content-Type: application/json" \
            -d '{
                "name": "Simple Form",
                "fields": [
                    {"name": "info", "type": "text"}
                ]
            }'
      
          pytest test/


      - name: Upload log folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: log-folder
          path: ./log

      - name: Clean up
        if: always()
        run: docker compose down --volumes --remove-orphans
